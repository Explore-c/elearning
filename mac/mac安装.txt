mac备份
1，备份：Sublime Text3/SSH Proxy/Microsoft Office 2011/Sequel Pro/MySQLWorkbench/SourceTree/SQLite Professional/Unity/Microsoft Remote Desktop/licecap/Adobe Photoshop CC 2015/Apple Configurator 2/
2，备份配置文件目录：
/opt/local/etc/nginx/conf.d/
/Library/Services/
/etc/hosts
~/.ssh/
~/.bash_profile
~/.bashrc
~/.inputrc

sudo xcodebuild -license
xcode-select --install

mac安装
#商店安装：Go2Shell/Google Chrome/New File Free/PDF Reader X/QQ/QQ音乐/RAR Extractor Free/Thunder/Xcode/Dr. Cleaner/MPlayerX/Color Picker/iHex/Base64Anywhere/App2Dmg/微信/
#下载安装：Sublime Text3/SSH Proxy/MacPorts/nodejs/Microsoft Office 2011/Sequel Pro/MySQLWorkbench/SourceTree/SQLite Professional/Unity/Microsoft Remote Desktop/licecap/Adobe Photoshop CC 2015

##设置存历史命令纪录数
```sh
vi ~/.bashrc
shopt -s histappend
HISTSIZE=100000
HISTFILESIZE=1000000
HISTCONTROL=ignoredups
HISTTIMEFORMAT='%F %T '
source ~/.bashrc
echo "$HISTSIZE $HISTFILESIZE"
```

vi ~/.inputrc
```
"\e[B": history-search-forward
"\e[A": history-search-backward
set completion-ignore-case On
```

vi ~/.bash_profile
```
#alias
alias ll='ls -lG'
alias rm='rm -i'
alias pyc='~/git_pro/packer_yui_compiler/compiler.sh'

export PATH=$PATH:/opt/local/bin
export PATH=$PATH:/opt/local/sbin
export GOPATH=~/go_pro
export PATH=$PATH:~/go_pro/bin/

export ANDROID_HOME=~/android-sdk
export ANDROID_SDK_HOME=~/
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

shopt -s histappend
export HISTCONTROL=ignoredups
export HISTIGNORE="[   ]*:&:bg:fg:exit:cd:ls:open"
export HISTFILESIZE=1000000
export HISTSIZE=100000
export HISTTIMEFORMAT='%F %T '

source ~/git_pro/server/servers.alias

export CLICOLOR=1
export LSCOLORS=gxfxaxdxcxegedabagacad
```
source ~/.bash_profile

安装BREW
#homebrew(http://brew.sh/index_zh-cn.html)
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"


chrome 插件
```
git clone https://github.com/callumlocke/json-formatter
chrome://extensions/ 开启 开发者模式 加载已解压的扩展程序 选择 extension 目录
git clone https://github.com/ETCExtensions/Edit-This-Cookie
https://chrome.google.com/webstore/detail/bcjindcccaagfpapjjmafapmmgkkhgoa
https://chrome.google.com/webstore/detail/edit-this-cookie/fngmhnnpilhplaeedifhccceomclgfbg
```

#npm
sudo npm install cnpm -g -ddd
sudo npm install -g cordova -ddd
sudo npm install -g ionic -ddd
sudo npm install uglify-js uglifycss -g

#centos7 webkit2png
git clone https://github.com/adamn/python-webkit2png.git
cd python-webkit2png
python setup.py install
yum -y install PyQt4 PyQt4-devel PyQt4-webkit
yum -y install xorg-x11-server-Xvfb.x86_64
yum -y install wqy-zenhei-fonts.noarch

#~/.ssh/目录权限
chmod a-rwx ~/.ssh/*
chmod u+rw ~/.ssh/*
chmod a+r ~/.ssh/config
chmod a+r ~/.ssh/known_hosts

#安装JDK：http://www.oracle.com/technetwork/java/javase/downloads/index.html
#安装mysql-workbench：http://dev.mysql.com/downloads/workbench/

===============================================
foremost恢复文件
rm test.jpg
brew install foremost
foremost -t jpg -i /dev/sda1 -o /home/gacanepa/rescued
df | grep boot => /dev/sda1
avi bmp dll doc docx exe gif htm jar jpg mbd mov mp4 mpg ole pdf
png ppt pptx rar rif sdw sx sxc sxi sxw vis wav wmv xls xlsx zip

===============================================
npm install 权限问题：EACCES: permission denied
sudo chown -R $USER ~/.npm
sudo chown -R $USER /usr/lib/node_modules
sudo chown -R $USER /usr/local/lib/node_modules
或
mkdir ~/.npm-global
npm config set prefix '~/.npm-global'
~/.bash_profile
export PATH=~/.npm-global/bin:$PATH
source ~/.bash_profile

==============================================
sourcetree 显示提交信息面板
defaults delete com.torusknot.SourceTreeNotMAS "NSSplitView Subview Frames repowindow_LogViewDescSplitter"
==============================================
“Shimo.app”已损坏，打不开。 您应该将它移到废纸篓。
sudo spctl --master-disable
sudo xattr -d com.apple.quarantine Shimo.app

=========================================
sudo gem install -n /usr/local/bin cocoapods
=========================================
/bin/bash: bad interpreter: Operation not permitted
xattr -dr com.apple.quarantine ./*
=========================================
http://anyproxy.io/cn/
npm install -g anyproxy
anyproxy 默认端口8001
anyproxy --port 1080
http://127.0.0.1:8002
https://github.com/qqnp1100/chxg
https://github.com/game-helper/weixin
=========================================
Too many open files
sudo launchctl limit maxfiles unlimited
-----------------------------------------
nc 常用：
侦听任意端口，以TCP/UDP 方式
端口扫描
传输文件
测速
1) -l 用于指定nc将处于侦听模式。指定该参数，则意味着nc被当作server，侦听并接受连接，而非向其它地址发起连接。
2) -p <port> 限制数据发送原端口
3) -s 指定发送数据的源IP地址，适用于多网卡机
4) -u 指定nc使用UDP协议，默认为TCP
5) -v 输出交互或出错信息，新手调试时尤为有用
6）-w 超时秒数，后面跟数字
7）-z 表示zero，表示扫描时不发送任何数据
nc -vz -w 5 127.0.0.1 1-100 #对 1-100 端口进行扫描
nc -vz -w 5 127.0.0.1 8888 #连接端口
nc -l 8888 -v #监听端口
=======================================
xcode library not found for -libstdc++.6.0.9
tagets->Build Phases ->Link Binary With Libraries下找到这个库
Xcode10后没有libstdc++库 可以使用：https://github.com/devdawei/libstdc-
https://www.jianshu.com/p/6d94278d62b3
========================================
react-native 工程时，出错：xcrun: error: unable to find utility "instruments", not a developer tool or in PATH
解决方法：在 终端执行如下命令 sudo xcode-select -s /Applications/Xcode.app/Contents/Developer/
注意：前提是你已经安装了xcode
=======================================

brew install wget nmap nginx mysql php@7.2 brew-php-switcher pkg-config libmemcached
brew-php-switcher 7.2
php -m
pecl install memcached
brew services restart php
brew services restart nginx
brew services restart memcached

pecl version 查看版本信息
pecl help 可以查看命令帮助
pecl search xdebug  搜索可以安装的扩展信息
pecl install xdebug 安装扩展

dyld: Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.64.dylib
icu4c 66.1 降级到 64.2
cd $(brew --prefix)/Homebrew/Library/Taps/homebrew/homebrew-core/Formula
git log --follow icu4c.rb
git checkout -b icu4c-62.1 896d1018c7a4906f2c3fa1386aaf283497db60a2
brew reinstall ./icu4c.rb
或
brew info icu4c
brew switch icu4c 64.2
=====================================
mac启动项
1，系统偏好设置->用户与群组->登录项 查看：cat ~/Library/Preferences/com.apple.loginitems.plist
2，launch启动项
ll ~/Library/LaunchAgents
ll /Library/LaunchDaemons
ll /Library/LaunchAgents
ll /System/Library/LaunchDaemons
ll /System/Library/LaunchAgents
launchctl list
launchctl load xxx.plist
launchctl unload xxx.plist
plist文件选项：RunAtLoad自动运行/KeepAlive持续运行/StartCalendarInterval设置定时执行
3，/System/Library/StartupItems 和 /Library/StartupItems
4，crontab -l
5，关闭Spotlight系统偏好设置->聚焦
=========================================
Spotlight 关闭掉
sudo mdutil -a -i off
sudo mdutil -a -i on
cd /System/Library/CoreServices/
sudo mv Search.bundle/ Search2.bundle/
sudo mv Search2.bundle/ Search.bundle/
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist
=======================================
mac chrome 书签位置
cp '/Users/hcxiong/Library/Application Support/Google/Chrome/Default/Bookmarks' '/Users/hcxiong/git_pro/Bookmarks'
把Bookmarks文件删除，然后把Bookmarks.bak重命名为Bookmarks
在Chrome浏览器中输入chrome://restart
==================================
已损坏，打不开。您应该将它移到废纸篓
sudo spctl --master-disable
sudo spctl --master-enable
==================================
java -jar ~/compiler.jar --js "$descPath/jsfile.max.js" --create_source_map "$descPath/jsfile.min.js.map" --source_map_format=V3 --js_output_file "$descPath/jsfile.min.js"
==================================
brew install mediainfo
mediainfo 1.png
https://github.com/MediaArea/MediaInfo
brew cask install qlimagesize
https://github.com/Nyx0uf/qlImageSize/releases/latest
qlmanage -r
https://github.com/Nyx0uf/qlImageSize
brew cask install phew
https://github.com/sveinbjornt/Phew
==================================
diskutil list 或 fdisk -l #查看当前系统所有硬盘及分区情况
diskutil info /dev/disk0 #查看具体分区参数
fdisk /dev/disk2 #在指定的硬盘（例：/dev/sda）上创建分区：查看帮助（h），新建分区（n），删除分区（d），查看分区情况（p），分区成功后，写分区表并退出（w）
mkfs.ext4 /dev/sdb1 #对新建分区（例：/dev/sda1）进行格式化
mkdir -p /dfs/dn1 #创建分区挂接目录
mount /dev/sdb1 /dfs/dn1 #挂接分区
vi /etc/fstab
/dev/sdb1 /dfs/dn1 ext4 defaults 0 0
或者
brew install e2fsprogs
brew install https://raw.githubusercontent.com/yalp/homebrew-core/fuse-ext2/Formula/fuse-ext2.rb
mke2fs
brew cask install osxfuse
brew install ext2fuse
brew install ext4fuse
挂载
sudo ext2fuse /dev/disk2s2 ~/Desktop/usbdisk -o rw+
sudo ext4fuse /dev/disk2s2 ~/Desktop/usbdisk -o rw+
sudo mount -t fuse-ext2 /dev/disk2s2 ~/Desktop/usbdisk
格式化ext4，一定要取消挂载后格式化
sudo mkfs.ext4 /dev/disk2s2
sudo umount ~/Desktop/usbdisk

brew install ntfs-3g
mount -t ntfs-3g
mount -t ntfs-3g /dev/sdb1 /mnt/ntfs_disk
ntfs-3g /dev/sdb1 /mnt/ntfs_disk
vi /etc/fstab
ntfs-3g silent,umask=0,locale=zh_CN.utf8 0 0

MACOS磁盘分区
https://www.jianshu.com/p/6a1f365617ad
diskutil listFilesystems #支持的文件系统
diskutil eraseDisk MS-DOS raspberrypi disk2 #将优盘数据擦除并格式化为 FAT32 格式
diskutil eraseDisk ExFAT raspberrypi disk2 #将优盘数据擦除并格式化为 ExFAT 格式
diskutil eraseDisk HFS+ raspberrypi disk2 #将优盘数据擦除并格式化为 Apple_HFS 格式
diskutil eraseDisk ExFAT raspberrypi MBR disk2 #擦除磁盘时指定分区表类型 NTFS 格式
#创建分区：优盘（disk2）上创建了 3 个分区，第一个（F01）格式为 FAT32，大小是 3 Gb。第二个（F02）格式为 JHFS+，大小为 3 Gb。最后一个是『自由空间』，大小为剩余的容量。
diskutil partitionDisk disk2 3 MBR MS-DOS F01 3G JHFS+ F02 3G HFS+ F03 0
diskutil partitionDisk disk2 2 ExFAT rpi 30G ExFAT data 0
#分割分区：优盘的第二个分区（disk2s2）又分割成了两个更小的分区，分别是 FAT32 格式的 F01（disk2s2），和 JHFS+ 格式的 F02（disk2s3）。虽然命令中指定了 F02 的大小是 3G，因为是最后一个分区，所以自动扩展到占用剩余的磁盘空间。最后它的实际大小是 4.5G。
diskutil splitPartition disk2s2 2 MS-DOS F02 1.5g JHFS+ F04 1.5g
#合并分区：disk2s2 disk2s3
diskutil mergePartitions JHFS+ Starky disk2s2 disk2s3
#调整分区大小（无损）
diskutil resizeVolume disk2s2 4g

LINUX磁盘分区
fdisk -l
fdisk /dev/disk2 #在指定的硬盘（例：/dev/sda）上创建分区：查看帮助（h），新建分区（n），删除分区（d），查看分区情况（p），分区成功后，写分区表并退出（w）
[New]--[Primary]--手动输入分区容量，以M为单位。回车，创建成功。
mkfs.ext4 /dev/sdb1
e2label 分区路径 卷标名
mount -t /dev/sdb1 /mnt/sdb1
umount /dev/sdb1
vi /etc/fstab
/dev/sdb1          /mnt/sdb1          ext4     defaults     0 2
chmod 777 /mnt/sdb1
===============================================
如何修复拆分的融合硬盘
https://support.apple.com/zh-cn/HT207584

制做系统启动盘
下载macos-mojave系统：
https://apps.apple.com/cn/app/macos-mojave/id1398502828?aosid=p239&cid=aos-cn-aff-ir&clickid=3k5zbeSSCxyJU5U0EBxnPXevUknzXx3DDUbp2I0&irchannel=13654&ircid=7639&irgwc=1&irpid=1244234&mt=12
格式化U盘MACOS扩展(日志式)，名称为：Mojave
制作系统盘：
sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/Mojave /Applications/Install\ macOS\ Mojave.app —nointeraction
开机出现闪烁的问号文件夹解决方法
Command (⌘)-R 重新安装您的 Mac 上装有的最新 macOS（建议操作）
Option-⌘-R 升级到与您的 Mac 兼容的最新 macOS
Shift-Option-Command-R 重新安装 Mac 随附的 macOS 或与它最接近且仍在提供的版本。
================================================================
sqlite3 ~/Library/Containers/com.tencent.QQMusicMac/Data/Library/Application\ Support/QQMusicMac/qqmusic.sqlite
select replace(singer||'-'||name,x'0a',','), file from NEWFOLDERSONGS as a inner join NEWFOLDERS as b on a.seq=b.seq and a.seq=199 inner join SONGS as c on c.id=a.id;
=========================================================
安装Cocospods
更新系统的gem版本：打开终端，输入：sudo gem update --system；
设置国内gem源：gem sources --list输出为https://gems.ruby-china.org/请略过此步；否则先删除官方源再添加gems国内源：gem sources --remove https://rubygems.org/; gem sources --add https://gems.ruby-china.org/；
安装Cocospods：sudo gem install cocoapods。
=========================================================
rvictl
在使用rvictl对手机进行抓包时报错: rvictl: command not found
1>. xcode没有安装Command Line Tools,执行命令 xcode-select --install 安装一下然后重启终端，对我无效
2>. 进入/usr/bin，看有没有rvictls安装。没有的话,进入下面两个目录，安装下两个pkg。
a. Xcode.app/Contents/Resources/Packages/MobileDevice.pkg
b. Xcode.app/Contents/Resources/Packages/MobileDeviceDevelopment.pkg
然后重启下终端，再调用rvictls -s,检查该命令是否生效
我的系统升级为10.15.1后发现常用的上述两个方法依然无法使用,查阅相关资料后发现,是由于该命令被放到其他路径所导致。
将该路径添加到环境path中即可:
vi /etc/paths
添加 /Library/Apple/usr/bin/

system_profiler SPUSBDataType | grep "Serial Number:.*" | sed s#".*Serial Number: "##

rvictl -s 00008020-0004342E3C28002E
rvictl -x 00008020-0004342E3C28002E
=====================================================
Wireshark
过滤关系：eq == ne != gt > lt < ge >= le <= matches ~ bitwise_and & not ! or || and && xor ^^ [...] in contains
过滤条件：
ip.host==192.168.0.158
ip.dst==192.168.0.158 or ip.src==192.168.0.158 and tcp
ip.src==192.168.0.158 and tcp
eth.addr==E0:33:8E:AB:E6:91
ip.src==192.168.0.0/16
tcp.port==8230
tcp.port==80 || udp.port==80
tcp.dstport==80 || tcp.srcport==80
tcp.port >= 1 and tcp.port <= 80
tcp.len>=20
icmp
icmp[0]==8
icmp[0]==0
http.request.method==GET
http.request.method==POST
http contains HTTP
http.content_length <=20
http.request.urimatches "vipscu"

telnet arp snmp dns icmp
protocol：可能值http、https、ftp、udp、tcp、ipv4、ipv6、arp、icmp等协议
direction：可能的值 src、dst、src and dst、src or dst 默认src or dst
host(s):可能的值 net、port、host、portrange 默认host
logical operation（逻辑运算）：not and or not具有最高优先级，and or优先级相同，运算从左向右


TCP连接:SYN ACK RST UTG PSH FIN
三次握手：发送端发送一个SYN=1，ACK=0标志的数据包给接收端，请求进行连接，这是第一次握手；
接收端收到请求并且允许连接的话，就会发送一个SYN=1，ACK=1标志的数据包给发送端，告诉它，可以通讯了，并且让发送端发送一个确认数据包，这是第二次握手；
最后，发送端发送一个SYN=0，ACK=1的数据包给接收端，告诉它连接已被确认，这就是第三次握手。之后，一个TCP连接建立，开始通讯。
*SYN：同步标志
同步序列编号(Synchronize Sequence Numbers)栏有效。该标志仅在三次握手建立TCP连接时有效。它提示TCP连接的服务端检查序列编号，该序列编号为TCP连接初始端(一般是客户端)的初始序列编号。
在这里，可以把 TCP序列编号看作是一个范围从0到4，294，967，295的32位计数器。通过TCP连接交换的数据中每一个字节都经过序列编号。
在TCP报头中的序列编号栏包括了TCP分段中第一个字节的序列编号。
*ACK：确认标志
确认编号(Acknowledgement Number)栏有效。大多数情况下该标志位是置位的。TCP报头内的确认编号栏内包含的确认编号(w+1，Figure-1)为下一个预期的序列编号，同时提示远端系统已经成功接收所有数据。
*RST：复位标志
复位标志有效。用于复位相应的TCP连接。
*URG：紧急标志
紧急(The urgent pointer) 标志有效。紧急标志置位，
*PSH：推标志
该标志置位时，接收端不将该数据进行队列处理，而是尽可能快将数据转由应用处理。在处理 telnet 或 rlogin 等交互模式的连接时，该标志总是置位的。
*FIN：结束标志
带有该标志置位的数据包用来结束一个TCP回话，但对应端口仍处于开放状态，准备接收后续数据。
TCP的几个状态对于我们分析所起的作用。在TCP层，有个FLAGS字段，这个字段有以下几个标识：SYN, FIN, ACK, PSH, RST, URG.其中，对于我们日常的分析有用的就是前面的五个字段。它们的含义是：SYN表示建立连接，FIN表示关闭连接，ACK表示响应，PSH表示有 DATA数据传输，RST表示连接重置。
其中，ACK是可能与SYN，FIN等同时使用的，比如SYN和ACK可能同时为1，它表示的就是建立连接之后的响应，如果只是单个的一个SYN，它表示的只是建立连接。
TCP的几次握手就是通过这样的ACK表现出来的。但SYN与FIN是不会同时为1的，因为前者表示的是建立连接，而后者表示的是断开连接。
RST一般是在FIN之后才会出现为1的情况，表示的是连接重置。一般地，当出现FIN包或RST包时，我们便认为客户端与服务器端断开了连接；
而当出现SYN和SYN＋ACK包时，我们认为客户端与服务器建立了一个连接。
PSH为1的情况，一般只出现在DATA内容不为0的包中，也就是说PSH为1表示的是有真正的TCP数据包内容被传递。TCP的连接建立和连接关闭，都是通过请求－响应的模式完成的。
========================================================
xcodebuild -project JGKWX.xcodeproj clean
xcodebuild -project JGKWX.xcodeproj build
xcodebuild archive -project JGKWX.xcodeproj build -scheme JGKWX -archivePath ./archive/dsqp.xcarchive
xcodebuild -exportArchive -archivePath ./archive/dsqp.xcarchive -exportPath ./archive/dsqp.ipa -exportOptionsPlist ./archive/dsqp.plist

xcodebuild archive -project JGKWX.xcodeproj build -scheme JGKWX -archivePath ./archive/app.xcarchive -configuration Ad-hoc -sdk iphoneos
xcodebuild -exportArchive -archivePath ./archive/app.xcarchive -exportPath ./archive/app.ipa -exportOptionsPlist ./archive/app.plist

vi dsqp.plist
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>compileBitcode</key>
    <false/>
    <key>method</key>
    <string>enterprise</string>
    <key>provisioningProfiles</key>
    <dict>
        <key>com.laisan.jgkwx</key>
        <string>package_dep</string>
    </dict>
</dict>
</plist>

xcodebuild -target JGKWX build
xcodebuild -scheme shemename -workspace xxx.xcworkspace build
xcrun -sdk iphoneos PackageApplication -v dsqp.app -o dsqp.ipa
security cms -D -i package_dep.mobileprovision
security cms -D -i package_dis.mobileprovision

altool --validate-app -f file -u username [-p password] [--output-format xml]
altool --upload-app -f file -u username [-p password] [--output-format xml]

sudo gem install fastlane
fastlane gym --export_method ad-hoc
fastlane gym --workspace ./Demo.xcworkspace --scheme Demo --clean --configuration Adhoc --archive_path ./archive/Demo.xcarchive" --export_method ad-hoc --output_directory ./ipa --output_name demo.ipa
fastlane gym --project ./JGKWX.xcodeproj --scheme JGKWX --clean --archive_path ./archive/JGKWX.xcarchive --output_directory ./archive --output_name app --export_xcargs -allowProvisioningUpdates

gem install fir-cli
fir login XXX_YOUR_API_TOKEN_XXX
fir publish APP_FILE_PATH
fir publish ${ipa_path} -T "XXX_YOUR_API_TOKEN_XXX" -c "${commit_msg}"
==================================================================
ANDROID签名
sudo jarsigner -tsa http://timestamp.digicert.com -sigalg SHA1withRSA -digestalg SHA1 -keystore nerve-android.keystore -storepass 123456 -signedjar android-release-signed.apk android-release-unsigned.apk nerve
jarsigner -verbose -keystore nerve-android.keystore -storepass 123456 -signedjar android-release-signed.apk -digestalg SHA1 -sigalg MD5withRSA android-release-unsigned.apk nerve
压缩APK包
zipalign -z 4 android-release-signed.apk nerve.apk
IOS重新签名
ausign_linux -email cq@qq.com -p 123456
ausign_linux -login cq@qq.com -p 123456
ausign_linux -password 123456789 -o 123456
普通签名例子
ausign_linux -sign cq.ipa -p 123 -c cq.p12 -m cq.mobileprovision -o cq2.ipa
-dt 自动删除锁签名
-at 20191212 自动插入时间锁
-id com.tencent.wechat22222222 修改应用id后签名
ausign_linux -sign 2.ipa -c my.p12 -m my.mobileprovision -p “123” -o resign-555.ipa -id “com.tencent.wechat3” -n “微信马甲3” -v “1.0.0” -dt -at 20190902
自动删除时间锁，自动插入时间锁设置到期日期20190902，然后把id修改为自己的com.tencent.wechat3，把名字修改为微信马甲3,把版本号改成1.0.0
ausign -apps #查看先有的应用列表
修改应用信息签名到期时间
ausign -app 3aa99adf-72e7-441a-be5b-518c050a79b2 -k expire_time -v 20190801
expire_time（到期时间，格式20190102）,is_bid(是否被禁用,1表示禁用,0不禁用),is_deleted(是否删除),alert_msg(app过期提醒信息),description(应用的备注),contact(应用的联系人信息)
修改应用描述信息
ausign -app 3aa99adf-72e7-441a-be5b-518c050a79b2 -k description -v "微信马甲最新版收150元"
修改应用到期提醒信息
ausign -app 3aa99adf-72e7-441a-be5b-518c050a79b2 -k alert_msg -v "签名已经到期，请联系qq2462611616"
删除app
ausign -app 3aa99adf-72e7-441a-be5b-518c050a79b2 -k is_deleted -v 1
禁用app
ausign -app 3aa99adf-72e7-441a-be5b-518c050a79b2 -k is_bid -v 1
给app设置个联系人信息
ausign -app 3aa99adf-72e7-441a-be5b-518c050a79b2 -k contact -v "张三qq2462611616"
修改统一的签名到期提醒
ausign -user alert_msg -v "签名到期了，请联系xxx"
设置到期后弹窗提示后再闪退
ausign -user expired_alert -v 1
设置到期后直接闪退奔溃
ausign -user expired_alert -v 0
更新应用安装量和运行量报告
ausign -user report -v 1
激活软件
ausign -user code -v "aa99adf-72e7-441"
校验证书密码是否正确
ausign -check my.p12 -p 123456
http://s.kxapp.com/
http://sign.applicationloader.net/
=================================================================
yum install sshpass
sshpass -p 123456 ssh root@10.0.0.10 'll /home'

=================================================================
CleanMyMacX 无法打开
codesign -f -s - --deep /Applications/CleanMyMac\ X.app
sudo xattr -d com.apple.quarantine /Applications/CleanMyMac\ X.app
================================================================
dscl . -list /Users UniqueID           //查看用户
dscl . -list /Groups  PrimaryGroupID   //查看用户组
================================================================
sudo mdutil -i off #关闭索引
sudo mdutil -E #清理索引
sudo mdutil -i o #打开索引
================================================================
Error: Permission denied @ apply2files - /usr/local/lib/docker/cli-plugins
sudo chown -R $(whoami) $(brew --prefix)/*


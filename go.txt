https://github.com/duolatech/xapimanager

https://github.com/bmizerany/pat
https://github.com/julienschmidt/httprouter
https://github.com/zenazn/goji
https://github.com/gin-gonic/gin
github.com/astaxie/beego
https://github.com/revel/revel

https://github.com/bilibili/kratos

http://www.golangnote.com/topic/87.html
https://github.com/stripe/einhorn

Martini

https://github.com/lunny/tango
https://github.com/gin-gonic/gin
https://github.com/go-martini/martini
https://github.com/astaxie/beego
https://github.com/valyala/fasthttp
https://github.com/robfig/revel
https://github.com/plimble/ace

https://github.com/coocood/freecache
https://github.com/outbrain/orchestrator
https://github.com/antonholmquist/jason
https://github.com/olahol/melody
https://github.com/gorilla/websocket
https://github.com/smartystreets/goconvey
https://github.com/name5566/leaf
https://github.com/tsuru/tsuru
https://github.com/leanote/leanote
https://github.com/tealeg/xlsx
http://git.oschina.net/openmeeting2/openmeeting2
https://github.com/PuerkitoBio/goquery
https://github.com/hybridgroup/gobot
https://github.com/google/gxui

https://github.com/astaxie/beedb

https://github.com/go-chassis/go-chassis
https://github.com/TruthHun/DocHub
https://github.com/rodrigo-brito/gocity

容器安全扫描
https://github.com/knqyf263/trivy

https://github.com/snail007/goproxy

https://github.com/XiaoMi/Gaea

https://github.com/douyu/jupiter

命令行解析
https://github.com/alecthomas/kingpin
日期操作
https://github.com/golang-module/carbon

生成GO文件过大问题2.3M变900K
go build -ldflags -w go-safe-hosts.go
upx压缩
https://github.com/upx/upx/releases
brew install upx
upx -9 -k go-safe-hosts

go mod init etms
GO代码检测
curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin latest
https://github.com/securego/gosec
gosec -help
time gosec ./...
gosec -include=G101,G203,G401 ./...
gosec -exclude=G303 ./...

go 打包到不同平台windows linux运行程序
1、Mac下编译Linux, Windows平台的64位可执行程序：
$ CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build test.go
$ CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build test.go
2、Linux下编译Mac, Windows平台的64位可执行程序：
$ CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build test.go
$ CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build test.go
3、Windows下编译Mac, Linux平台的64位可执行程序：
$ SET CGO_ENABLED=0SET GOOS=darwin3 SET GOARCH=amd64 go build test.go
$ SET CGO_ENABLED=0 SET GOOS=linux SET GOARCH=amd64 go build  test.go
注：如果编译web等工程项目，直接cd到工程目录下直接执行以上命令
GOOS：目标可执行程序运行操作系统，支持 darwin freebsd linux windows android netbsd openbsd plan9
GOARCH：目标可执行程序操作系统构架，包括 386 amd amd64 arm arm64

https://github.com/grafana/grafana
https://github.com/prometheus/prometheus
